// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// DO NOT EDIT, CODE GENERATED BY entc.

package ent

import (
	"time"
)

// UpdateGuildAdminConfigInput represents a mutation input for updating guildadminconfigs.
type UpdateGuildAdminConfigInput struct {
	UpdateTime              *time.Time
	ClearEnabled            bool
	Enabled                 *bool
	ClearDefaultMaxChannels bool
	DefaultMaxChannels      *int
	ClearDefaultMaxClones   bool
	DefaultMaxClones        *int
	ClearComment            bool
	Comment                 *string
}

// Mutate applies the UpdateGuildAdminConfigInput on the GuildAdminConfigMutation builder.
func (i *UpdateGuildAdminConfigInput) Mutate(m *GuildAdminConfigMutation) {
	if v := i.UpdateTime; v != nil {
		m.SetUpdateTime(*v)
	}
	if i.ClearEnabled {
		m.ClearEnabled()
	}
	if v := i.Enabled; v != nil {
		m.SetEnabled(*v)
	}
	if i.ClearDefaultMaxChannels {
		m.ClearDefaultMaxChannels()
	}
	if v := i.DefaultMaxChannels; v != nil {
		m.SetDefaultMaxChannels(*v)
	}
	if i.ClearDefaultMaxClones {
		m.ClearDefaultMaxClones()
	}
	if v := i.DefaultMaxClones; v != nil {
		m.SetDefaultMaxClones(*v)
	}
	if i.ClearComment {
		m.ClearComment()
	}
	if v := i.Comment; v != nil {
		m.SetComment(*v)
	}
}

// SetInput applies the change-set in the UpdateGuildAdminConfigInput on the GuildAdminConfigUpdate builder.
func (c *GuildAdminConfigUpdate) SetInput(i UpdateGuildAdminConfigInput) *GuildAdminConfigUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateGuildAdminConfigInput on the GuildAdminConfigUpdateOne builder.
func (c *GuildAdminConfigUpdateOne) SetInput(i UpdateGuildAdminConfigInput) *GuildAdminConfigUpdateOne {
	i.Mutate(c.Mutation())
	return c
}

// UpdateGuildConfigInput represents a mutation input for updating guildconfigs.
type UpdateGuildConfigInput struct {
	UpdateTime            *time.Time
	ClearEnabled          bool
	Enabled               *bool
	ClearDefaultMaxClones bool
	DefaultMaxClones      *int
	ClearRegexMatch       bool
	RegexMatch            *string
	ClearContactEmail     bool
	ContactEmail          *string
}

// Mutate applies the UpdateGuildConfigInput on the GuildConfigMutation builder.
func (i *UpdateGuildConfigInput) Mutate(m *GuildConfigMutation) {
	if v := i.UpdateTime; v != nil {
		m.SetUpdateTime(*v)
	}
	if i.ClearEnabled {
		m.ClearEnabled()
	}
	if v := i.Enabled; v != nil {
		m.SetEnabled(*v)
	}
	if i.ClearDefaultMaxClones {
		m.ClearDefaultMaxClones()
	}
	if v := i.DefaultMaxClones; v != nil {
		m.SetDefaultMaxClones(*v)
	}
	if i.ClearRegexMatch {
		m.ClearRegexMatch()
	}
	if v := i.RegexMatch; v != nil {
		m.SetRegexMatch(*v)
	}
	if i.ClearContactEmail {
		m.ClearContactEmail()
	}
	if v := i.ContactEmail; v != nil {
		m.SetContactEmail(*v)
	}
}

// SetInput applies the change-set in the UpdateGuildConfigInput on the GuildConfigUpdate builder.
func (c *GuildConfigUpdate) SetInput(i UpdateGuildConfigInput) *GuildConfigUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateGuildConfigInput on the GuildConfigUpdateOne builder.
func (c *GuildConfigUpdateOne) SetInput(i UpdateGuildConfigInput) *GuildConfigUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
